CREATE TABLE medspas (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name character varying(255) NOT NULL UNIQUE,
    address text NOT NULL,
    phone_number character varying(20) NOT NULL,
    email_address character varying(254) NOT NULL
);

CREATE TABLE services (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    medspa_id bigint NOT NULL REFERENCES medspas(id) ON DELETE CASCADE,
    name character varying(255) NOT NULL,
    description text,
    price decimal(10,2) NOT NULL,
    duration integer NOT NULL,
    UNIQUE(medspa_id, name)
);
COMMENT ON COLUMN services.duration IS 'Duration in minutes';
COMMENT ON COLUMN services.price IS 'Price in dollars';

CREATE TABLE appointments (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    medspa_id bigint NOT NULL REFERENCES medspas(id) ON DELETE CASCADE,
    start_time timestamp with time zone NOT NULL,
    status character varying(20) NOT NULL DEFAULT 'scheduled' CHECK (status IN ('scheduled', 'completed', 'canceled'))
    /*,
    total_duration integer GENERATED ALWAYS AS (
        (SELECT COALESCE(SUM(s.duration), 0) 
         FROM services s 
         JOIN AppointmentService aps ON s.id = aps.service_id 
         WHERE aps.appointment_id = appointments.id)
    ) STORED,
    total_price decimal(10,2) GENERATED ALWAYS AS (
        (SELECT COALESCE(SUM(s.price), 0) 
         FROM services s 
         JOIN AppointmentService aps ON s.id = aps.service_id 
         WHERE aps.appointment_id = appointments.id)
    ) STORED,
    */
);
-- COMMENT ON COLUMN appointments.total_duration IS 'Total duration in minutes derived from sum of all related services durations';
-- COMMENT ON COLUMN appointments.total_price IS 'Total price in dollars derived from sum of all related services prices';

-- Join table for many-to-many relationship between appointments and services
CREATE TABLE appointments_services_through (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    appointment_id bigint NOT NULL REFERENCES appointments(id) ON DELETE CASCADE,
    service_id bigint NOT NULL REFERENCES services(id) ON DELETE CASCADE,
    UNIQUE(appointment_id, service_id)
);

-- Indexes for better performance
CREATE INDEX idx_services_medspa_id ON services(medspa_id);
CREATE INDEX idx_appointments_medspa_id ON appointments(medspa_id);
CREATE INDEX idx_appointments_start_time ON appointments(start_time);
CREATE INDEX idx_appointments_services_through_appointment_id ON appointments_services_through(appointment_id);
CREATE INDEX idx_appointments_services_through_service_id ON appointments_services_through(service_id);
